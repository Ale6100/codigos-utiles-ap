{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */
    /* https://www.youtube.com/watch?v=I1ZFsPK0Q-Y&ab_channel=LucasPaganini */

    "target": "ES2022",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "lib": ["ESNext", "DOM"],                            /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "useDefineForClassFields": true,                     /* Emit ECMAScript-standard-compliant class fields. */

    "module": "ES6",                                     /* Specify what module code is generated. */
    "rootDir": "./src",                                  /* Specify the root folder within your source files. */

    "declaration": true,                                 /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
    "outDir": "./dist",                                  /* Specify an output folder for all emitted files. */
    "removeComments": false,                             /* Disable emitting comments. */

    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */

    "strict": true,                                      /* Enable all strict type-checking options. */

    "noUnusedLocals": true,                              /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": true,                          /* Raise an error when a function parameter isn't read. */
    "allowUnusedLabels": false,                          /* Disable error reporting for unused labels. */
    "allowUnreachableCode": false,                       /* Disable error reporting for unreachable code. */

    "noImplicitReturns": true,                           /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noImplicitOverride": true,                          /* Ensure overriding members in derived classes are marked with an override modifier. */

    "exactOptionalPropertyTypes": true,                  /* Interpret optional property types as written, rather than adding 'undefined'. */
    "noFallthroughCasesInSwitch": true,                  /* Enable error reporting for fallthrough cases in switch statements. */
    "noUncheckedIndexedAccess": true,                    /* Add 'undefined' to a type when accessed using an index. */
    "noPropertyAccessFromIndexSignature": true,          /* Enforces using indexed accessors for keys declared using an indexed type. */

    "skipLibCheck": true
  }
}
